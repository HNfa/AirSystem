<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.wyx.mapper.OrderMapper">
    <!-- 用户订单查询结果类型 -->
    <resultMap type="cn.wyx.entity.InfoOfOrder" id="InfoOfOrderMap">
        <!--订单共有信息-->
        <id column="order_id" property="orderId"/>
        <result column="order_sureTime" property="orderSureTime"/>
        <result column="order_price" property="orderPrice"/>
        <result column="cityStartName" property="startCityName"/>
        <result column="cityEndName" property="endCityName"/>
        <result column="airportUpName" property="upAirportName"/>
        <result column="airportDownName" property="downAirportName"/>
        <result column="order_state" property="orderState"/>
        <result column="order_contactName" property="orderContactName"/>
        <result column="order_contactTel" property="orderContactTel"/>
        <result column="order_contactEmail" property="orderContactEmail"/>
        <result column="order_nums" property="orderNums"/>
        <result column="pre_upTime" property="preUpTime"/>
        <result column="pre_downTime" property="preDownTime"/>
        <result column="flights_id" property="flightsId"/>
        <result column="model_name" property="ModelName"/>
        <result column="flights_meals" property="flightsMeal"/>

        <collection property="tickets" ofType="cn.wyx.entity.InfoOfTicket">
            <id column="ticket_id" property="ticketId"/>
            <result column="passenger_name" property="passengerName"/>
            <result column="passenger_tel" property="passengerTel"/>
            <result column="passenger_certype" property="passengerCertype"/>
            <result column="passenger_cerid" property="passengerCerid"/>
            <result column="ticket_price" property="ticketPrice"/>
            <result column="airport_fee" property="airportFee"/>
            <result column="fuel_surcharge" property="fuelSurcharge"/>
            <result column="ticket_seat" property="ticketSeat"/>
            <result column="space_id" property="spaceId"/>
            <result column="passenger_type" property="passengerType"/>
        </collection>
    </resultMap>

    <select id="findAllById" resultMap="InfoOfOrderMap" parameterType="Long">
        select o.order_id,
               order_price,
               order_sureTime,
               cityStartName,
               cityEndName,
               airportUpName,
               airportDownName,
               order_state,
               order_contactName,
               order_contactTel,
               order_contactEmail,
               order_nums,
               pre_upTime,
               pre_downTime,
               tf.flights_id,
               model_name,
               flights_meals,
               tt2.ticket_id,
               passenger_name,
               passenger_tel,
               passenger_certype,
               passenger_cerid,
               ticket_price,
               airport_fee,
               fuel_surcharge,
               ticket_seat,
               ts.space_id,
               passenger_type
        from v_airroute_airport_city
                 left join tb_flights on v_airroute_airport_city.airroute_id = tb_flights.airroute_id
                 left join tb_flight tf on tb_flights.flights_id = tf.flights_id
                 left join tb_model t on tb_flights.model_id = t.model_id
                 left join tb_tickets tt on tf.flight_id = tt.flight_id
                 left join tb_space ts on tt.space_id = ts.space_id
                 left join tb_ticket tt2 on tt.tickets_id = tt2.tickets_id
                 left join tb_passenger tp on tt2.ticket_id = tp.ticket_id
                 left join tb_order o on tt2.order_id = o.order_id
                 left join tb_user tu on o.user_id = tu.user_id
        where tu.user_id = #{userId}
    </select>

    <select id="findOneById" resultMap="InfoOfOrderMap" parameterType="String">
        select o.order_id,
               order_price,
               order_sureTime,
               cityStartName,
               cityEndName,
               airportUpName,
               airportDownName,
               order_state,
               order_contactName,
               order_contactTel,
               order_contactEmail,
               order_nums,
               pre_upTime,
               pre_downTime,
               tf.flights_id,
               model_name,
               flights_meals,
               tt2.ticket_id,
               passenger_name,
               passenger_tel,
               passenger_certype,
               passenger_cerid,
               ticket_price,
               airport_fee,
               fuel_surcharge,
               ticket_seat,
               ts.space_id,
               passenger_type
        from v_airroute_airport_city
                 left join tb_flights on v_airroute_airport_city.airroute_id = tb_flights.airroute_id
                 left join tb_flight tf on tb_flights.flights_id = tf.flights_id
                 left join tb_model t on tb_flights.model_id = t.model_id
                 left join tb_tickets tt on tf.flight_id = tt.flight_id
                 left join tb_space ts on tt.space_id = ts.space_id
                 left join tb_ticket tt2 on tt.tickets_id = tt2.tickets_id
                 left join tb_passenger tp on tt2.ticket_id = tp.ticket_id
                 left join tb_order o on tt2.order_id = o.order_id
                 left join tb_user tu on o.user_id = tu.user_id
        where o.order_id = #{orderId}
    </select>

    <insert id="insertOrder" parameterType="cn.wyx.entity.Order">
        insert into tb_order (order_id, user_id, order_price, order_sureTime, order_payTime, order_payType, order_nums,
                              order_state, order_contactName, order_contactTel, order_contactEmail)
        values (#{orderId}, #{userId}, #{orderPrice}, #{orderSureTime}, #{orderPayTime}, #{orderPayType}, #{orderNums},
                #{orderState}, #{orderContactName}, #{orderContactTel}, #{orderContactEmail});
    </insert>

    <update id="updateOrderStateAndPayTime">
        update tb_order
        <set>
            <if test="orderState != null and orderState != ''">
                order_state = #{orderState},
            </if>
            <if test="orderPayTime != null">
                order_payTime = #{orderPayTime},
            </if>
            <if test="payType !=null and payType != ''">
                order_payType = #{payType},
            </if>
        </set>
        where order_id = #{orderId};
    </update>

</mapper>